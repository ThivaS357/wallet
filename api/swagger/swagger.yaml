swagger: "2.0"
info:
  version: "0.0.1"
  title: API base system
# during dev, should point to your local machine
host: localhost:7100
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      For accessing the API a valid JWT token must be passed in all the queries in
      the 'Authorization' header.


consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

  /accounts:
    x-swagger-router-controller: account_controller
    post:
      operationId: create
      description: "Create an account"
      tags:
        - API
      parameters:
        - in: body
          name: "CreateAccount"
          schema:
           $ref: "#/definitions/CreateAccount"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Response"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"

  /accounts/{id}:
    x-swagger-router-controller: account_controller
    post:
      operationId: reload
      description: "Reload a account"
      tags:
        - API
      parameters:
        - in: path
          name: id
          type: string
          required: true

        - in: body
          name: "ReloadAccount"
          schema:
            $ref: "#/definitions/ReloadAccount"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Response"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      operationId: useMoney
      description: "use money"
      tags:
        - API
      parameters:
        - in: path
          name: id
          type: string
          required: true

        - in: body
          name: "UseAccount"
          schema:
            $ref: "#/definitions/UseAccount"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Response"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"

    get:
      operationId: get
      description: "get Account"
      tags:
        - API
      parameters:
        - in: path
          name: id
          type: string
          required: true

      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Response"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"

  /accounts/promo/{id}/{type}:
    x-swagger-router-controller: account_controller
    get:
      operationId: applyPromo
      description: "Apply a Promo"
      tags:
        - API
      parameters:
        - in: path
          name: id
          type: string
          required: true

        - in: path
          name: type
          type: number
          required: true
          minimum: 2
          maximum: 2

      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Response"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  Response:
    type: object
    properties:
      message:
        type: string

  CreateAccount:
    required:
      - name
    properties:
      name:
        type: string

  ReloadAccount:
    required:
      - amount
    properties:
      amount:
        type: number
        minimum: 1

  UseAccount:
    required:
      - reduction
    properties:
      reduction:
        type: number
        minimum: 1
